{"ast":null,"code":"var _jsxFileName = \"/Users/sharathgoyalrachakonda/Documents/customer-rewards/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TRANSACTIONS = gql`\n  query {\n    transactions {\n      customerId\n      date\n      amount\n    }\n  }\n`;\nfunction App() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSACTIONS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Customer ID: \", transaction.customerId, \" Date: \", transaction.date, \" Amount: $\", transaction.amount]\n    }, transaction.customerId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useQuery","gql","GET_TRANSACTIONS","App","loading","error","data","transactions","map","transaction","customerId","date","amount"],"sources":["/Users/sharathgoyalrachakonda/Documents/customer-rewards/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst GET_TRANSACTIONS = gql`\r\n  query {\r\n    transactions {\r\n      customerId\r\n      date\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const { loading, error, data } = useQuery(GET_TRANSACTIONS);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return (\r\n    <ul>\r\n      {data.transactions.map(transaction => (\r\n        <li key={transaction.customerId}>\r\n          Customer ID: {transaction.customerId} Date: {transaction.date} Amount: ${transaction.amount}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,GAAG,MAAM,aAAa;AAAC;AAE9B,MAAMC,gBAAgB,GAAGD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASE,GAAG,GAAG;EAAA;EACb,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGN,QAAQ,CAACE,gBAAgB,CAAC;EAE3D,IAAIE,OAAO,EAAE,oBAAO;IAAA,UAAG;EAAU;IAAA;IAAA;IAAA;EAAA,QAAI;EACrC,IAAIC,KAAK,EAAE,oBAAO;IAAA,UAAG;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAI;EAEjC,oBACE;IAAA,UACGC,IAAI,CAACC,YAAY,CAACC,GAAG,CAACC,WAAW,iBAChC;MAAA,WAAiC,eAClB,EAACA,WAAW,CAACC,UAAU,EAAC,SAAO,EAACD,WAAW,CAACE,IAAI,EAAC,YAAU,EAACF,WAAW,CAACG,MAAM;IAAA,GADpFH,WAAW,CAACC,UAAU;MAAA;MAAA;MAAA;IAAA,QAGhC;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAET;AAAC,GAfQP,GAAG;EAAA,QACuBH,QAAQ;AAAA;AAAA,KADlCG,GAAG;AAiBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}